'use strict'

var nconf = require('nconf')
nconf.argv().env().file({ file: 'nconf-env.json' })

var chai = require('chai')
var should = chai.should()
var expect = chai.expect

var nodemailer = require('nodemailer')

var mailOptions = {
  from: nconf.get('ABIBAO_API_GATEWAY_SERVER_MAILER_FROM_NAME') + ' <' + nconf.get('ABIBAO_API_GATEWAY_SERVER_MAILER_FROM_EMAIL') + '>',
  to: 'gperreymond@gmail.com',
  subject: "[abibao.com] - tests d'envoie d'email.",
  text: "tests unitaires d'envoie d'email.",
  html: "tests unitaires d'envoie d'email."
}

var transporter

describe('testing nodemailer', function () {
  it('should create the transporter', function (done) {
    // create reusable transporter object using SMTP transport
    transporter = nodemailer.createTransport({
      logger: false,
      debug: false,
      pool: true,
      secure: false,
      connectionTimeout: 4000,
      host: nconf.get('ABIBAO_API_GATEWAY_SERVER_MAILER_HOST'),
      port: nconf.get('ABIBAO_API_GATEWAY_SERVER_MAILER_PORT'),
      auth: {
        user: nconf.get('ABIBAO_API_GATEWAY_SERVER_MAILER_USERNAME'),
        pass: nconf.get('ABIBAO_API_GATEWAY_SERVER_MAILER_PASSWORD')
      }
    })
    done()
  })
  it('should send an email', function (done) {
    transporter.sendMail(mailOptions, function (error, info) {
      console.log(error, info)
      expect(error).to.be.null
      expect(info).to.be.not.null
      expect(info.rejected).to.be.a('array')
      expect(info.rejected).to.have.length(0)
      done()
    })
  })
  })
})
